{"ast":null,"code":"var _jsxFileName = \"/Users/vishwakvelamuri/roboflow/Note-Detector/frontend/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport UploadStep from './components/UploadStep';\nimport ResultStep from './components/ResultStep';\nimport { postPredict } from './api';\nimport './styles.css';\n\n// Application states\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STEPS = {\n  UPLOAD: 'upload',\n  LOADING: 'loading',\n  RESULT: 'result'\n};\n\n/**\n * Main application component\n */\nfunction App() {\n  _s();\n  // State management\n  const [step, setStep] = useState(STEPS.UPLOAD);\n  const [file, setFile] = useState(null);\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  /**\n   * Handle file selection\n   */\n  const handleFileSelect = selectedFile => {\n    setFile(selectedFile);\n    setError(\"\");\n  };\n\n  /**\n   * Handle analyze button click\n   */\n  const handleAnalyze = async () => {\n    if (!file) return;\n    try {\n      setStep(STEPS.LOADING);\n\n      // Call API to analyze the image\n      const resultBlob = await postPredict(file);\n\n      // Create a URL for the result image\n      const url = URL.createObjectURL(resultBlob);\n      setImageUrl(url);\n\n      // Show the result\n      setStep(STEPS.RESULT);\n    } catch (err) {\n      console.error(\"Analysis failed:\", err);\n      setError(\"Failed to analyze the image. Please try again.\");\n      setStep(STEPS.UPLOAD);\n    }\n  };\n\n  /**\n   * Reset the application state\n   */\n  const handleReset = () => {\n    // Revoke object URL to prevent memory leaks\n    if (imageUrl) {\n      URL.revokeObjectURL(imageUrl);\n    }\n\n    // Reset all state\n    setFile(null);\n    setImageUrl(\"\");\n    setError(\"\");\n    setStep(STEPS.UPLOAD);\n  };\n\n  // Render appropriate step based on current state\n  const renderStep = () => {\n    switch (step) {\n      case STEPS.LOADING:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card loading\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Analyzing your sheet music...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this);\n      case STEPS.RESULT:\n        return /*#__PURE__*/_jsxDEV(ResultStep, {\n          imageUrl: imageUrl,\n          onReset: handleReset\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this);\n      case STEPS.UPLOAD:\n      default:\n        return /*#__PURE__*/_jsxDEV(UploadStep, {\n          onFileSelect: handleFileSelect,\n          onAnalyze: handleAnalyze\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }, this), renderStep()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1FCDlDTtszeySKdTmPjNqgQ2JlE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","UploadStep","ResultStep","postPredict","jsxDEV","_jsxDEV","STEPS","UPLOAD","LOADING","RESULT","App","_s","step","setStep","file","setFile","imageUrl","setImageUrl","error","setError","handleFileSelect","selectedFile","handleAnalyze","resultBlob","url","URL","createObjectURL","err","console","handleReset","revokeObjectURL","renderStep","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onReset","onFileSelect","onAnalyze","_c","$RefreshReg$"],"sources":["/Users/vishwakvelamuri/roboflow/Note-Detector/frontend/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport UploadStep from './components/UploadStep';\nimport ResultStep from './components/ResultStep';\nimport { postPredict } from './api';\nimport './styles.css';\n\n// Application states\nconst STEPS = {\n  UPLOAD: 'upload',\n  LOADING: 'loading',\n  RESULT: 'result'\n};\n\n/**\n * Main application component\n */\nfunction App() {\n  // State management\n  const [step, setStep] = useState(STEPS.UPLOAD);\n  const [file, setFile] = useState(null);\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  /**\n   * Handle file selection\n   */\n  const handleFileSelect = (selectedFile) => {\n    setFile(selectedFile);\n    setError(\"\");\n  };\n\n  /**\n   * Handle analyze button click\n   */\n  const handleAnalyze = async () => {\n    if (!file) return;\n    \n    try {\n      setStep(STEPS.LOADING);\n      \n      // Call API to analyze the image\n      const resultBlob = await postPredict(file);\n      \n      // Create a URL for the result image\n      const url = URL.createObjectURL(resultBlob);\n      setImageUrl(url);\n      \n      // Show the result\n      setStep(STEPS.RESULT);\n    } catch (err) {\n      console.error(\"Analysis failed:\", err);\n      setError(\"Failed to analyze the image. Please try again.\");\n      setStep(STEPS.UPLOAD);\n    }\n  };\n\n  /**\n   * Reset the application state\n   */\n  const handleReset = () => {\n    // Revoke object URL to prevent memory leaks\n    if (imageUrl) {\n      URL.revokeObjectURL(imageUrl);\n    }\n    \n    // Reset all state\n    setFile(null);\n    setImageUrl(\"\");\n    setError(\"\");\n    setStep(STEPS.UPLOAD);\n  };\n\n  // Render appropriate step based on current state\n  const renderStep = () => {\n    switch (step) {\n      case STEPS.LOADING:\n        return (\n          <div className=\"card loading\">\n            <div className=\"spinner\"></div>\n            <p>Analyzing your sheet music...</p>\n          </div>\n        );\n        \n      case STEPS.RESULT:\n        return (\n          <ResultStep \n            imageUrl={imageUrl} \n            onReset={handleReset} \n          />\n        );\n        \n      case STEPS.UPLOAD:\n      default:\n        return (\n          <UploadStep \n            onFileSelect={handleFileSelect} \n            onAnalyze={handleAnalyze} \n          />\n        );\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      {error && <div className=\"error-message\">{error}</div>}\n      {renderStep()}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}